version: '3'
services:
    web:
        container_name: web
        image: nginx
        volumes:
            - ./conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./backend:/var/www/html
        ports:
            - 8001:80
        restart: always
        depends_on:
            - php
            - db
        env_file:
            - .env
        environment:
            XDEBUG: remote_host=192.168.80.1 remote:port=9003
            PHP_USER_ID: 1000
        
    
    php:
        container_name: php
        build: docker
        restart: always
        volumes:
            - ./conf/php/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ./conf/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ./backend:/var/www/html
        expose:
            - 9000
        env_file:
            - .env
        environment:
            XDEBUG: remote_host=192.168.32.1 remote:port=9003
        
    # Contenedor de Composer para PHP 
    composer:
        container_name: composer
        image: composer:2.5.5
        volumes:
            - ./backend:/app
        command: update
    # creamos la base de datos POSTGRES
    # las variables de entorno son definidas en un archivo a parte
    
    db:
        container_name: postgres_db
        image: postgres:14-alpine
        restart: always
        environment:
            - USER_UID=1000
            - USER_GID=1000
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        ports:
            - 5432:5432
        volumes:
            - ./conf/postgres/:/docker-entrypoint-initdb.d/
            - ./data/postgres:/var/lib/postgresql/data:delegated

    frontend:
        container_name: my_frontend
        image: node:lts
        working_dir: /app
        entrypoint: /bin/bash
        ports:
            - 8080:8080
        volumes:
        - ./frontend/:/app
        tty: true
        command: -c "npm run dev -- --host 0.0.0.0"